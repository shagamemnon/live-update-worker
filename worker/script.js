!function(n){var t={};function e(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return n[i].call(a.exports,a,a.exports,e),a.l=!0,a.exports}e.m=n,e.c=t,e.d=function(n,t,i){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:i})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var a in n)e.d(i,a,function(t){return n[t]}.bind(null,a));return i},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(n,t){const e=n=>t=>t.method.toLowerCase()===n.toLowerCase(),i=e("connect"),a=e("delete"),r=e("get"),s=e("head"),o=e("options"),p=e("patch"),l=e("post"),d=e("put"),c=e("trace"),u=n=>t=>{const e=new URL(t.url).pathname;return(e.match(n)||[])[0]===e};class h{constructor(){this.routes=[]}handle(n,t){return this.routes.push({conditions:n,handler:t}),this}connect(n,t){return this.handle([i,u(n)],t)}delete(n,t){return this.handle([a,u(n)],t)}get(n,t){return this.handle([r,u(n)],t)}head(n,t){return this.handle([s,u(n)],t)}options(n,t){return this.handle([o,u(n)],t)}patch(n,t){return this.handle([p,u(n)],t)}post(n,t){return this.handle([l,u(n)],t)}put(n,t){return this.handle([d,u(n)],t)}trace(n,t){return this.handle([c,u(n)],t)}all(n){return this.handle([],n)}route(n){const t=this.resolve(n);return t?t.handler(n):new Response("resource not found",{status:404,statusText:"not found",headers:{"content-type":"text/plain"}})}resolve(n){return this.routes.find(t=>!(t.conditions&&(!Array.isArray(t)||t.conditions.length))||("function"==typeof t.conditions?t.conditions(n):t.conditions.every(t=>t(n))))}}var m={items:{shoes:"0",shirts:"0",hats:"0"},async update(n){const t=Object.keys(this.items).map(async n=>{let t=await INVENTORY.get(n);this.items[n]=t});for(const n of t)await n;return this.items}},y={body:n=>'<html>\n    <head>\n        <meta charset="utf-8">\n        <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1">\n        <link rel="shortcut icon" href="/favicon.ico">\n        <title>Workers Shopping Cart</title>\n      <style>\n        html, body {\n      background-color: #eee;\n      font-family: calibri, sans-serif;\n    }\n\n    #app {\n      width: 760px;\n      margin: 20px auto;\n    }\n    #app #product .box {\n      width: 230px;\n      background-color: #fff;\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n      display: inline-block;\n      margin: 0 10px;\n      position: relative;\n    }\n    #app #product .box img {\n      width: 230px;\n      height: auto;\n      position: relative;\n      overflow: hidden\n    }\n    #app #product .box i {\n      width: 50px;\n      height: 50px;\n      background: #ED277F;\n      color: #ffffff;\n      border-radius: 25px;\n      text-align: center;\n      line-height: 50px;\n      font-size: 1.4rem;\n      position: absolute;\n      right: 20px;\n      top: 150px;\n      box-shadow: 0 0 4px 2px rgba(80, 80, 80, 0.1);\n      cursor: pointer;\n      transition: all 0.3s;\n    }\n    #app #product .box i:hover {\n      transform: scale(1.05);\n    }\n    #app #product .box h2 {\n      margin-left: 20px;\n    }\n    #app #product .box p {\n      margin-left: 20px;\n    }\n    #app #cart {\n      margin-top: 50px;\n      overflow: hidden;\n    }\n    #app #cart #head {\n      width: 100%;\n      border-bottom: 1px solid #BFBFBF;\n      height: 40px;\n      display: block;\n    }\n    #app #cart #head h3 {\n      display: inline-block;\n      line-height: 40px;\n      margin: 0;\n    }\n    #app #cart #head #price {\n      display: inline-block;\n      color: #777777;\n      margin-left: 200px;\n      line-height: 40px;\n    }\n    #app #cart #head #inventory {\n      display: inline-block;\n      color: #777777;\n      margin-left: 100px;\n      line-height: 40px;\n    }\n    #app #cart #head #total {\n      display: inline-block;\n      color: #777777;\n      line-height: 40px;\n      float: right;\n    }\n    #app #cart .row {\n      width: 100%;\n      border-bottom: 1px solid #BFBFBF;\n      overflow: hidden;\n      padding: 10px 0;\n      display: block;\n      float: left;\n    }\n    #app #cart .row img {\n      height: 100px;\n      float: left;\n    }\n    #app #cart .row h4 {\n      float: left;\n      margin: 0;\n      line-height: 100px;\n      margin-left: 20px;\n      width: 100px;\n    }\n    #app #cart .row p {\n      float: left;\n      margin: 0;\n      width: 80px;\n      line-height: 100px;\n      margin-left: 35px;\n      text-align: center;\n    }\n    #app #cart .row .qty-minus {\n      float: left;\n      width: 20px;\n      line-height: 100px;\n      margin-left: 60px;\n      text-align: center;\n      cursor: pointer;\n    }\n    #app #cart .row .qty {\n      float: left;\n      width: 20px;\n      line-height: 100px;\n      margin-left: 20px;\n      text-align: center;\n    }\n    #app #cart .row .qty-plus {\n      float: left;\n      width: 20px;\n      line-height: 100px;\n      margin-left: 20px;\n      text-align: center;\n      cursor: pointer;\n    }\n    #app #cart .row .del {\n      float: left;\n      width: 80px;\n      line-height: 100px;\n      margin-left: 60px;\n      cursor: pointer;\n      text-decoration: underline;\n      color: #ED277F;\n    }\n    #app #cart .row .totalprice {\n      float: left;\n      width: 80px;\n      line-height: 100px;\n      margin-left: 10px;\n      text-align: right;\n    }\n    #app #cart .row .row p::before, #app #cart .row .box p::before, #app #cart .row .totalprice::before {\n      content: "$";\n    }\n    #app #cart h5 {\n      font-size: 1.2rem;\n      text-align: right;\n    }\n\n    #app {\n      width: 100%\n    }\n\n    #app #product .box {\n      width: 230px;\n      background-color: #fff;\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n      display: block;\n      margin: 0 auto;\n      position: relative;\n      margin-bottom: 50px;\n    }\n\n    #app #product .box p {\n      margin-right: 20px;\n      text-align: right;\n      font-size: 24px;\n      margin-bottom: 5px;\n      border-bottom: 3px solid white\n    }\n\n    .number {\n      font-size: 2rem;\n      font-weight: bold;\n      font-family: helvetica;\n      text-align: center;\n      color: black;\n      transition-timing-function: cubic-bezier(0,.6,.79,1.35);\n      transition-duration: 300ms\n    }\n\n    .transition {\n      font-size: 3rem !important;\n      transition-timing-function: cubic-bezier(0,.54,.79,1.35) !important;\n      transition-duration: 120ms !important;\n      opacity: 0.2 !important;\n    }\n\n      </style>\n      <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css" rel="stylesheet">\n      <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.10/vue.min.js"><\/script>\n    </head>\n\n    <body>\n    <div id="app">\n        <div id="product">\n          <item v-for="item in items" v-bind:item_data="item"></item>\n        </div>\n        <div id="cart">\n          <div id="head">\n            <h3>Shopping Cart</h3>\n            <div id="price">Price</div>\n            <div id="total">Total</div>\n          </div>\n          <buyitem v-for="buyitem in buyitems" v-bind:buy_data="buyitem"></buyitem>\n          <h5 v-if="total()">Sum: $ {{total()}}</h5>\n        </div>\n      </div>\n\n      <template id="product-box">\n        <div class="box">\n          <img :src="item_data.img"/>\n          <i class="fa fa-plus" v-on:click="addItem(item_data)"></i>\n          <h2>{{item_data.title}}</h2>\n          <p>$ {{item_data.price}}</p>\n          <p>\n          <span>Only</span>\n          <span style="font-weight:bold;text-align:right;" id="inventory-counter" :class="item_data.id" class="number">{{item_data.inventory}} </span><span> left!</span>\n          </p>\n        </div>\n      </template>\n\n      <template id="buy-box">\n        <div class="row">\n          <img :src="buy_data.img"/>\n          <h4>{{buy_data.title}}</h4>\n          <p>$ {{buy_data.price}}</p>\n          <div class="qty-minus" v-on:click="minusQty(buy_data)">-</div>\n          <div class="qty">{{buy_data.qty}}</div>\n          <div class="qty-plus" v-on:click="plusQty(buy_data)">+</div>\n          <div class="del" v-on:click="removeItem(buy_data)">Remove</div>\n          <div class="totalprice">{{buy_data.total}}</div>\n        </div>\n      </template>\n      <script>\n      async function fetchAndUpdate() {\n        console.log(\'Fetching update\')\n        let response = await fetch(\'/inventory\')\n        response = await response.json()\n        return updateInventory(response)\n      }\n\n      setInterval(fetchAndUpdate, 1000)\n\n      const updateInventory = (items) => {\n        const parse = (selector, currentInventory) => {\n          console.log(selector, currentInventory)\n          let elem = document.querySelector(\'.\' + selector + \'\')\n          if (elem && elem.innerText !== String(currentInventory)) {\n            elem.innerText = String(currentInventory)\n          }\n        }\n        items = Object.entries(items)\n        for (const [k,v] of items) {\n          parse(k, v)\n        }\n      }\n\n      const updateItem = async (key, plusOrMinus) => {\n        let res = await fetch(\'/update?key=\' + key + \'&direction=\' + plusOrMinus + \'\')\n        res = await res.text()\n        let quantities = document.querySelectorAll(\'\' + key + \'\')\n        quantities.forEach(quantity => {\n          elem.classList.toggle(\'transition\')\n          quantity.innerText = parseInt(res)\n          setTimeout(() => { elem.classList.toggle(\'transition\') }, 1000)\n        })\n      }\n      <\/script>\n      <script>\n\n        var shoesClick = 0;\n        var hatsClick = 0;\n        var shirtsClick = 0;\n\n        Vue.component("item", {\n          template: "#product-box",\n          props: ["item_data", "buyitems"],\n          methods: {\n            addItem: function(item_data) {\n              if (item_data.id == "shoes") {\n                shoesClick += 1;\n                if (shoesClick <= 1) {\n                  this.pushData();\n                } else {\n                  var i = this.findIndex(this.$parent.buyitems, "id", "shoes");\n                  this.$parent.buyitems[i].qty += 1;\n                  this.$parent.buyitems[i].total = this.$parent.buyitems[i].qty*this.$parent.buyitems[i].price;\n                  console.log(i);\n                }\n              } else if (item_data.id == "hats") {\n                hatsClick += 1;\n                if (hatsClick <= 1) {\n                  this.pushData();\n                } else {\n                  var i = this.findIndex(this.$parent.buyitems, "id", "hats");\n                  this.$parent.buyitems[i].qty += 1;\n                  this.$parent.buyitems[i].total =this.$parent.buyitems[i].qty*this.$parent.buyitems[i].price;\n                }\n              } else {\n                shirtsClick += 1;\n                if (shirtsClick <= 1) {\n                  this.pushData();\n                } else {\n                  var i = this.findIndex(this.$parent.buyitems, "id", "shirts");\n                  this.$parent.buyitems[i].qty += 1;\n                  this.$parent.buyitems[i].total = this.$parent.buyitems[i].qty*this.$parent.buyitems[i].price;\n                }\n              }\n              updateItem(item_data.id, \'plus\')\n              console.log(shoesClick, hatsClick, shirtsClick);\n            },\n            pushData: function() {\n              this.$parent.buyitems.push({\n                img: this.item_data.img,\n                title: this.item_data.title,\n                price: this.item_data.price,\n                qty: 1,\n                total: this.item_data.price,\n                id: this.item_data.id\n              })\n            },\n            findIndex: function(array, attr, value) {\n              for (var i = 0; i < array.length; i += 1) {\n                if (array[i][attr] === value) {\n                  return i;\n                }\n              }\n              return -1;\n            },\n          }\n        });\n        Vue.component("buyitem", {\n          template: "#buy-box",\n          props: ["buy_data", "buyitems"],\n          methods: {\n            removeItem: function(buy_data) {\n              var index = this.$parent.buyitems.indexOf(buy_data);\n              this.$parent.buyitems.splice(index, 1);\n              if (buy_data.id == "shoes") {\n                shoesClick = 0;\n              } else if (buy_data.id == "hats") {\n                hatsClick = 0;\n              } else {\n                shirtsClick = 0;\n              }\n              updateItem(buy_data.id, \'minus\')\n            },\n            plusQty: function(buy_data){\n              updateItem(buy_data.id, \'plus\')\n              buy_data.qty += 1;\n              buy_data.total = buy_data.qty*buy_data.price;\n            },\n            minusQty: function(buy_data){\n              buy_data.qty -= 1;\n              if (buy_data.qty < 1) {\n                var index = this.$parent.buyitems.indexOf(buy_data);\n                this.$parent.buyitems.splice(index, 1);\n                buy_data.qty = 0;\n                if (buy_data.id == "shoes") {\n                  shoesClick = 0;\n                } else if (buy_data.id == "hats") {\n                  hatsClick = 0;\n                } else {\n                  shirtsClick = 0;\n                }\n              }\n              updateItem(buy_data.id, \'minus\')\n              buy_data.total = buy_data.qty*buy_data.price;\n            }\n          }\n        })\n\n        var app = new Vue({\n          el: "#app",\n          data: {\n            items: [\n              {\n                img: "https://storage.franktaylor.io/d06cef5527f329e519553f649b3a76e219f2c9d6/shoes-2.jpg",\n                title: "Shoes",\n                price: "25",\n                id: "shoes",\n                inventory: 0\n              },\n              {\n                img: "https://storage.franktaylor.io/d06cef5527f329e519553f649b3a76e219f2c9d6/hat-2.jpg",\n                title: "Hats",\n                price: "73",\n                id: "hats",\n                inventory: 0\n              },\n              {\n                img: "https://storage.franktaylor.io/d06cef5527f329e519553f649b3a76e219f2c9d6/tshirt.jpg",\n                title: "Shirts",\n                price: "35",\n                id: "shirts",\n                inventory: 0\n              }\n            ],\n            buyitems: []\n          },\n          methods: {\n            total: function(){\n              var sum = 0;\n              this.buyitems.forEach(function(buyitem){\n                    sum += parseInt(buyitem.total);\n              });\n              return sum;\n            }\n          }\n        })\n        <\/script>\n\n\n          </body>\n          </html>\n    ',render(n){return new Response(`${this.body()}`,{headers:{"Content-Type":"text/html"}})}};addEventListener("fetch",n=>n.respondWith(f(n)));const f=async n=>{let t=n.request;const e=new h;e.get("/",n=>y.render(n)),e.get("/inventory",n=>(async n=>{let t=await m.update();return new Response(JSON.stringify(t),{headers:{"Content-Type":"application/json"}})})()),e.get(".*/update",t=>{let e=new URLSearchParams(t.url.split("?").pop()),[i,a]=[e.get("key"),e.get("direction")];return(async(n,t,e)=>{let i=await INVENTORY.get(t);return i?(i="plus"===e?parseInt(i)-1:parseInt(i)+1,Reflect.set(m.items,t,i),n.waitUntil(await INVENTORY.put(t,i)),new Response(JSON.stringify(m.items,null,2))):new Response("0")})(n,i,a)});try{return await e.route(t)}catch(n){let e=await fetch(t);return(e=new Response(e.body,e)).headers.set("x-wrker-status",n),e}}}]);